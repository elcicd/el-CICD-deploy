{{- if $.Values.profiles }}
  {{- if not (kindIs "slice" $.Values.profiles) }}
    {{- fail (printf "Profiles must be specified as an array: %s" $.Values.profiles) }}
  {{- end }}
{{- end }}

{{- $allTemplates := list }}
{{- range $template := $.Values.templates  }}
  {{- if $template.appNames }}
    {{- range $appName := $template.appNames }}
      {{- $newTemplate := deepCopy $template }}
      {{- $_ := set $newTemplate "appName" $appName }}
      {{- $allTemplates = append $allTemplates $newTemplate }}
    {{- end }}
  {{- else }}
    {{- $allTemplates = append $allTemplates $template }}
  {{- end }}
{{- end }}

{{- $_ := set $.Values "parameters" ($.Values.parameters | default dict) }}
{{- include "elCicdChart.initParameters" $ }}
{{- include "elCicdChart.interpolateTemplates" (list $ $allTemplates $.Values.parameters) }}

{{- $skippedList := list }}
{{- range $template := $allTemplates  }}
  {{- $anyProfile := not $template.anyProfiles }}
  {{- range $profile := $template.anyProfiles }}
    {{- $anyProfile = or $anyProfile (has $profile $.Values.profiles) }}
  {{- end }}
  
  {{- $ignoreExactlyProfiles := $template.ignoreExactlyProfiles }}
  {{- range $profile := $template.ignoreExactlyProfilesProfiles }}
    {{- $ignoreExactlyProfiles = and $ignoreExactlyProfiles (has $profile $.Values.profiles) }}
  {{- end }}

  {{- $mustHaveProfiles := true }}
  {{- range $profile := $template.mustHaveProfiles }}
    {{- $mustHaveRender = and $mustHaveRender (has $profile $.Values.profiles) }}
  {{- end }}
  
  {{- $ignoreAnyProfiles := false }}
  {{- range $profile := $template.ignoreAnyProfiles }}
    {{- $ignoreAnyProfiles = or $ignoreAnyProfiles (has $profile $.Values.profiles) }}
  {{- end }}
  
  {{- if and $anyProfile $mustHaveProfiles (not $ignoreExactlyProfiles) (not $ignoreAnyProfiles) }}
    {{- $templateName := printf "elCicdChart.%s" $template.templateName }}
---
    {{- include $templateName (list $ $template) }}
# Rendered -> {{ $template.templateName }} {{ $template.appName }}
  {{- else }}
    {{- $skippedList = append $skippedList (list $ $template.templateName $template.appName) }}
  {{- end}}
{{- end }}

{{- if $.Values.renderValuesForKust }}
---
# __VALUES_START__
{{ $.Values | toYaml }}
# __VALUES_END__
{{- end }}
---
# Profiles: {{ $.Values.profiles }}
{{- range $skipped := $skippedList }}
  {{- include "elCicdChart.skippedTemplate" $skipped }}
{{- end }}